/* @(#)test.cfs	1.1 */

T805 (memory = 4M) SCSI_TRAM;
T805 (memory = 1M) USER_TRAM;

connect USER_TRAM.link[0] to host;
connect USER_TRAM.link[2] to SCSI_TRAM.link[1];

val n_clients 1;

val TFS_WRITE_BACK 9;
val TFS_WRITE_THROUGH 8;

process ( stacksize=20K, heapsize=200K,
	  interface ( 
		input fs, output ts,
		output tc[n_clients],
		input fc[n_clients],
		int n=n_clients,
		int fs_id = 0,
		int target=0,
		int link=0,
		int mode=TFS_WRITE_BACK,
		int msg_level=1
		)
	) server;


process ( stacksize=200K, heapsize=200K,
	  interface ( input fs, output ts,
			input ftfs, output ttfs)
	) shell;



process ( stacksize = 10K, heapsize=100K,
	  interface ( input fs, output ts,
			input fc[n_clients+1], output tc[n_clients+1],
			int n=n_clients+1
		)
	) mux;

input fs;
output ts;

connect shell.ftfs to server.tc[0];
connect shell.ttfs to server.fc[0];
connect shell.fs to mux.tc[0];
connect shell.ts to mux.fc[0];

connect server.fs to mux.tc[n_clients];
connect server.ts to mux.fc[n_clients];

connect mux.fs to fs;
connect mux.ts to ts;

place fs on host;
place ts on host;
place server on SCSI_TRAM;
use "tfserver.lku" for server;

place mux on USER_TRAM;
use "hostmux.lku" for mux;

place shell on USER_TRAM;
use "rtfsh.lku" for shell;

